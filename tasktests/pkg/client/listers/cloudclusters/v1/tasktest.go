/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/sean/tasktests/pkg/apis/cloudclusters/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TaskTestLister helps list TaskTests.
type TaskTestLister interface {
	// List lists all TaskTests in the indexer.
	List(selector labels.Selector) (ret []*v1.TaskTest, err error)
	// TaskTests returns an object that can list and get TaskTests.
	TaskTests(namespace string) TaskTestNamespaceLister
	TaskTestListerExpansion
}

// taskTestLister implements the TaskTestLister interface.
type taskTestLister struct {
	indexer cache.Indexer
}

// NewTaskTestLister returns a new TaskTestLister.
func NewTaskTestLister(indexer cache.Indexer) TaskTestLister {
	return &taskTestLister{indexer: indexer}
}

// List lists all TaskTests in the indexer.
func (s *taskTestLister) List(selector labels.Selector) (ret []*v1.TaskTest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TaskTest))
	})
	return ret, err
}

// TaskTests returns an object that can list and get TaskTests.
func (s *taskTestLister) TaskTests(namespace string) TaskTestNamespaceLister {
	return taskTestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TaskTestNamespaceLister helps list and get TaskTests.
type TaskTestNamespaceLister interface {
	// List lists all TaskTests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.TaskTest, err error)
	// Get retrieves the TaskTest from the indexer for a given namespace and name.
	Get(name string) (*v1.TaskTest, error)
	TaskTestNamespaceListerExpansion
}

// taskTestNamespaceLister implements the TaskTestNamespaceLister
// interface.
type taskTestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TaskTests in the indexer for a given namespace.
func (s taskTestNamespaceLister) List(selector labels.Selector) (ret []*v1.TaskTest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TaskTest))
	})
	return ret, err
}

// Get retrieves the TaskTest from the indexer for a given namespace and name.
func (s taskTestNamespaceLister) Get(name string) (*v1.TaskTest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("tasktest"), name)
	}
	return obj.(*v1.TaskTest), nil
}
